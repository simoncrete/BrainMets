#!/bin/bash
# Run pipeline on desired image

#Current test path: /home/lab/capstoneGit/Capstone/pipeline/inputTest

#Pre requisites:
#    Need to have a single scan to test on in the format of FSRTCASE_XXX.nii.gz and need the directory where it is.
#    Need a trained 3D nnUNet model to use to predict the mask of the scan.
#    Need a trained survival model that must be saved in a zip folder in this directory as survival_model.zip
#Data Requirements:
#    brainMets patient data for survival in days
#    raw and preprocessed prediction data to normalize and extract features from our new single feature set
#

# Change working directory to where we wanna be in case it's being run from somewhere else
cd /home/lab/capstoneGit/Capstone/pipeline

# SEGMENTATION

# Ask user for NIFTY file path
echo 'Enter folder where desired image is (FSRTCASE_XXX.nii.gz)'
read inputFolder
mkdir -p $inputFolder/results
mkdir -p $inputFolder/resultsDump
echo -e '---START Segmentation---\n'

nnUNet_predict -i $inputFolder -o $inputFolder/resultsDump -t 502 -m 3d_fullres

# New NIFTY saved in $inputFolder/../outputTest, we need to access it here to open in slicer for viewing if possible
# Open new terminal to open slicer and display segmentation after getting file paths
inputFile=$(ls -p $inputFolder | grep -v / ) # Parse out folder names from ls command
outputFile=$(ls $inputFolder/resultsDump | head -n1 | cut -d " " -f1) # Grab .nii.gz file
mv /home/lab/capstoneGit/Capstone/pipeline/inputTest/resultsDump/$outputFile /home/lab/capstoneGit/Capstone/pipeline/inputTest/results
inputFilePath="$inputFolder/$inputFile"
outputFilePath="$inputFolder/results/$outputFile"

gnome-terminal -- /home/lab/Slicer-4.11.20210226-linux-amd64/Slicer --python-script display_scene.py $inputFilePath $outputFilePath
echo -e '---FINISH Segmentation---\n'

# FEATURE EXTRACTION
echo -e '---START Feature Extraction---\n'
python extraction.py $inputFolder $inputFolder/results/
echo -e '---FINISH Feature Extraction---\n'

# Normalize feature and remove colinear features in csv
echo -e '---START Feature Selection---\n'
python featureSelection.py
echo -e '---FINISH Feature Selection---\n'

# SURVIVAL PREDICTION
echo -e '---START Survival Prediction---\n'
# Give pre-processed csv to survival prediction model and output survival prediction graph
# We need a survival_model.zip already saved in this directory from the survival forest training file (Done as of now but may need to update)
python randomSurvivalForest.py

echo -e '---FINISH Survival Prediction---\n'
